@import "../../themes/ionic.globals";
// Progress bar
// --------------------------------------------------
:host {
    /**
     * @prop --height: Height of the progress bar
     * @prop --background: Background of the progress bar
     * @prop --speed: Speed of the progress bar
     * @prop --buffer-background: Background of the buffer bar
     * @prop --buffer-size: Size of the buffer circles
     * @prop --buffer-speed: Speed of the buffer circles
     */
    --height: 4px;
    --background: rgba(0, 0, 0, .12);
    --speed: 2.1s;
    --buffer-background: rgba(0, 0, 0, .30);
    --buffer-size: 10px;
    --buffer-speed: 0.5s;

    display: block;

    overflow: hidden;
}

:host(.ion-color) {
    --color: #{current-color(base)};
    --background: rgba(#{current-color(base-rgb)}, .12);
    --buffer-background: rgba(#{current-color(base-rgb)}, .30);
    --buffer-color: #{current-color(base)};
}

.progress-bar,
.progress-buffer {
    width: 100%;

    height: var(--height);

    contain: strict;
}

.progress-bar {
    background: var(--background);
}

.progress {
    background: var(--color);
}

:host(.determinate),
:host(.buffer) {
    @include rtl() {
        transform: rotate(180deg);
    }
    .progress {
        position: absolute;
        top: 0;
        bottom: 0;

        transition: width .3s linear;

        z-index: 1;
    }
}

:host(.indeterminate),
:host(.query) {
    .progress {
        &:before {
            position: absolute;

            top: 0;
            bottom: 0;

            background-color: inherit;

            content: "";
        }
    }
}

:host(.indeterminate) {
    .progress {
        &:before {
            animation: indeterminate var(--speed) infinite;
        }
    }
}

:host(.query) {
    .progress {
        &:before {
            animation: query var(--speed) infinite;
        }
    }
}

:host(.buffer) {
    .buffer-background {
        position: absolute;
        top: 0;

        width: 100%;
        height: 100%;

        background-color: var(--buffer-background);

        z-index: -1;
    }
    .buffer-bar {
        position: absolute;
        top: 0;

        width: 100%;
        height: 100%;

        background-color: var(--ion-background-color, #fff);

        z-index: -1;
    }
    .buffer-circles {
        @include rtl() {
            animation-direction: reverse;
        }
        position: absolute;
        top: 0;

        width: 100%;
        height: var(--height);

        background: radial-gradient(ellipse at center, var(--buffer-color) 0%, var(--buffer-color) 30%, transparent 30%) repeat-x 5px center;
        background-size: var(--buffer-size) var(--buffer-size);

        z-index: -1;
        animation: buffering var(--buffer-speed) infinite linear;
    }
    .progress {
        display: block;
    }
}

// Animation Keyframes
// --------------------------------------------------
@keyframes indeterminate {
    from {
        left: -10%;

        width: 15%;
    }
    to {
        left: 120%;

        width: 100%;
    }
}

@keyframes query {
    from {
        left: 130%;

        width: 15%;
    }
    to {
        left: -90%;

        width: 80%;
    }
}

@keyframes buffering {
    to {
        transform: translateX(-10px);
    }
}