@import "./datetime.vars";

// Datetime
// --------------------------------------------------

:host {
  /**
   * @prop --padding-top: Top padding of the datetime
   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the datetime
   * @prop --padding-bottom: Bottom padding of the datetime
   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the datetime
   *
   * @prop --placeholder-color: Color of the datetime placeholder
   *
   * @prop --background: The primary background of the datetime component.
   * @prop --background-secondary: The secondary background of the datetime component. This is the background of the header in the date picker and the dial and inputs in the time picker.
   * @prop --background-active: The background of the active interactive components. This is the selected date in the date picker. In the time picker this is the active input and active AM/PM button.
   * @prop --title-color: The text color of the title.
   * @prop --color: The primary body text color.
   * @prop --color-secondary: The color for the days of the week, next and previous buttons, and the AM/PM buttons.
   * @prop --color-active: The text color of any active text. Applies to the "today" date in the calendar picker. In the time picker this applies to the active input and active AM/PM buttons.
   * @prop --dial-color:  The color of the text that is selected by the dial in the time picker.
   * @prop --dial-background: The background of the dial and arm in the time picker.
   */

  display: block;

  background: var(--background);
}

/**
 * Title should not wrap
 * to the next line and should
 * show ellipsis instead.
 */
:host .datetime-header .datetime-title {
  text-overflow: ellipsis;

  white-space: nowrap;

  overflow: hidden;
}

// Calendar / Header / Action Buttons
// -----------------------------------

/**
 * Date/Year button should be on
 * the opposite side of the component
 * as the Next/Prev buttons
 */
:host .calendar-action-buttons {
  display: flex;

  justify-content: space-between;
}

:host .calendar-action-buttons ion-item,
:host .calendar-action-buttons ion-button {
  --background: translucent;
}

:host .calendar-action-buttons ion-item ion-label {
  display: flex;

  align-items: center;
}

:host .calendar-action-buttons ion-item ion-icon {
  @include padding(0, 0, 0, 4px);
}

// Calendar / Header / Days of Week
// -----------------------------------
:host .calendar-days-of-week {
  display: grid;
  grid-template-columns: repeat(7, 1fr);

  text-align: center;
}

// Calendar / Body
// -----------------------------------
:host .calendar-body {

  /**
   * We render at most 3 months
   * at a time, so we can assume
   * 3 columns here.
   */
  display: grid;
  grid-template-columns: 100% 100% 100%;

  scroll-snap-type: x mandatory;

  overflow-x: scroll;

  // Hide scrollbars on Firefox
  scrollbar-width: none;
}

/**
 * Hide scrollbars on Chrome and Safari
 */
:host .calendar-body::-webkit-scrollbar {
  display: none;
}

:host .calendar-body .calendar-month {
  /**
   * Swiping should snap to at
   * most one month at a time.
   */
  scroll-snap-align: start;
  scroll-snap-stop: always;

  /**
   * Create 7 columns for
   * 7 days in a week.
   */
  display: grid;
  grid-template-columns: repeat(7, 1fr);
}

/**
 * Center the day text vertically
 * and horizontally within its grid cell.
 */
:host .calendar-body .calendar-month .calendar-day {
  display: flex;

  align-items: center;

  justify-content: center;
}

:host(.in-item) {
  position: static;
}

:host(.datetime-placeholder) {
  color: var(--placeholder-color);
}

:host(.datetime-disabled) {
  opacity: .3;
  pointer-events: none;
}

:host(.datetime-readonly) {
  pointer-events: none;
}

button {
  @include input-cover();
}

.datetime-text {
  @include text-inherit();

  @include rtl() {
    direction: rtl;
  }

  flex: 1;

  min-height: inherit;

  direction: ltr;
  overflow: inherit;
}
