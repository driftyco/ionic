@import "../../themes/ionic.globals";

// Grid
// --------------------------------------------------
// Using flexbox for the grid, inspired by Philip Walton:
// http://philipwalton.github.io/solved-by-flexbox/demos/grids/
// By default each .col within a .row will evenly take up
// available width, and the height of each .col with take
// up the height of the tallest .col in the same .row.

$grid-columns-width:              (10, 20, 25, 33.3333, 50, 66.6666, 75, 80, 90) !default;
$grid-padding-width:              10px !default;
$grid-responsive-sm-break:        567px !default;  // smaller than landscape phone
$grid-responsive-md-break:        767px !default;  // smaller than portrait tablet
$grid-responsive-lg-break:        1023px !default; // smaller than landscape tablet

@mixin grid-column($width, $break: '') {
  $width-rounded: round($width);
  $width-percentage: percentage($width) / 100;

  ion-col {

    // Column Width

    &[offset-#{$break}#{$width-rounded}] {
      margin-left: $width-percentage;
    }

    // Column Offset

    &[width-#{$break}#{$width-rounded}] {
      width: $width-percentage;
    }

  }

}

@mixin responsive-grid-break($selector, $max-width) {
  @media (max-width: $max-width) {
    #{$selector} {
      flex-direction: column;

      ion-col {
        &[width-10],
        &[width-20],
        &[width-25],
        &[width-33],
        &[width-34],
        &[width-50],
        &[width-66],
        &[width-67],
        &[width-75],
        &[width-80],
        &[width-90] {
          flex: 1;

          margin-bottom: ($grid-padding-width * 3) / 2;
          margin-left: 0;

          width: 100%;
          max-width: 100%;
        }
      }

    }
  }
}

ion-grid {
  display: flex;

  flex-direction: column;

  padding: ($grid-padding-width / 2);

  width: 100%;
}

ion-row {
  display: flex;

  width: 100%;

  &[wrap] {
    flex-wrap: wrap;
  }

  &[top] {
    align-items: flex-start;
  }

  &[bottom] {
    align-items: flex-end;
  }

  &[center] {
    align-items: center;
  }

  &[stretch] {
    align-items: stretch;
  }

  &[baseline] {
    align-items: baseline;
  }
}

ion-col {
  display: block;

  flex: 1;

  padding: ($grid-padding-width / 2);

  width: 100%;

  // Column Alignment

  &[top] {
    align-self: flex-start;
  }

  &[bottom] {
    align-self: flex-end;
  }

  &[center] {
    align-self: center;
  }

  &[stretch] {
    align-self: stretch;
  }

  &[baseline] {
    align-self: baseline;
  }
 
}


// Responsive Grid Classes
// Adding a class of responsive-X to a row
// will trigger the width-direction to
// change to column and add some margin
// to any columns in the row for clearity

@include responsive-grid-break('[responsive-sm]', $grid-responsive-sm-break);
@include responsive-grid-break('[responsive-md]', $grid-responsive-md-break);
@include responsive-grid-break('[responsive-lg]', $grid-responsive-lg-break);


// Resposive Column Classes
// Add an attribute of X-width-10 to a col
// will trigger the width to be 10% for that breakpoint
// Ex: <ion-col lg-width-25 sm-width-50 width-100></ion-col>

@each $col in $grid-columns-width {
  @include grid-column($col);
}

// Smaller than large devices

@media (max-width: $grid-responsive-lg-break) {
  @each $col in $grid-columns-width {
    @include grid-column($col, 'lg-');
  }
}


// Smaller than medium devices

@media (max-width: $grid-responsive-md-break) {
  @each $col in $grid-columns-width {
    @include grid-column($col, 'md-');
  }
}


// Smaller than small devices

@media (max-width: $grid-responsive-sm-break) {
  @each $col in $grid-columns-width {
    @include grid-column($col, 'sm-');
  }
}
